"""
Django settings for djangoapi project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import importlib
import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

APPEND_SLASH = False

IS_UNDER_TEST = False

ALLOWED_HOSTS = ["*"]

SWAGGER_ENABLED = True
ADMIN_ENABLED = True

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "rest_framework",
    "rest_framework_simplejwt.token_blacklist",
    "drf_yasg",
    "django_rq",
    "storages",
    "django_filters",
    "simple_history",
    # custom
    "auth",
    "membership",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "simple_history.middleware.HistoryRequestMiddleware",
]

ROOT_URLCONF = "djangoapi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "djangoapi.wsgi.application"

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.db.DatabaseCache",
        "LOCATION": "cache_table",
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = "auth.User"

# JWT

JWT_PRIVATE_KEY = ""


JWT_PUBLIC_KEY = ""


SIMPLE_JWT = {
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "SIGNING_KEY": JWT_PRIVATE_KEY,
    "VERIFYING_KEY": JWT_PUBLIC_KEY,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "ALGORITHM": "RS256",
    "USER_ID_FIELD": "uuid",
    "USER_ID_CLAIM": "user_uuid",
    "TOKEN_TYPE_CLAIM": "access_to",
    "AUTH_TOKEN_CLASSES": ("auth.tokens.HmAccessToken",),
}

from rest_framework_simplejwt import settings

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/static/"


# DJANGO REST FRAMEWORK


REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "auth.authentication.JWTTokenUserAuthentication",
    ),
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.NamespaceVersioning",
    "COERCE_DECIMAL_TO_STRING": False,
    "DEFAULT_FILTER_BACKENDS": (
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.OrderingFilter",
    ),
}


if DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, "/static_out")
else:
    STATIC_ROOT = os.path.join(BASE_DIR, "static_out")


MANDRILL_API_URL = "https://mandrillapp.com/api/1.0"
MANDRILL_API_KEY = ""  # that's a test key


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "USER": os.environ["DATABASE_USER"],
        "NAME": os.environ["DATABASE_NAME"],
        "PASSWORD": os.environ["DATABASE_PASSWORD"],
        "HOST": os.environ["DATABASE_HOST"],
        "ATOMIC_REQUESTS": True,
        "TEST": {"ENGINE": "django.db.backends.sqlite3", "NAME": ":memory:"},
    }
}

RQ_QUEUES = {
    "default": {
        "URL": f"redis://{os.environ['RQ_REDIS_HOST']}:{os.environ['RQ_REDIS_PORT']}/{os.environ['RQ_REDIS_DB']}?socket_connect_timeout=10",
        "DEFAULT_TIMEOUT": 360,  # that's a job timeout not socket timeout
    }
}

RQ_SHOW_ADMIN_LINK = True

RQ_DELAY = True

APP_HOST = os.environ["APP_HOST"]
APP_URL = f"https://{APP_HOST}"

# TODO: replace this magic variable
ADMIN_URL = APP_URL.replace("app", "api")

MEMBER_FROM_EMAIL = "member@gmail.com"
MEMBER_FROM_NAME = "Welcome to our project"

CLIENT_MEMBER_FROM_NAME = ""


# Cors
CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = [
    APP_HOST,
    ADMIN_URL,
    "localhost:8080",
]


ADEFAULT_STRIPE_CURRENCY = "EUR"

DJANGO_SETTINGS = os.environ["DJANGO_SETTINGS"]


# profile notification email
PROFILE_NOTIFICATION_SUBJECT = "New profile created."
NOTIFICATION_EMAIL_RECIPIENT = "member@gmail.com"

VERSION_FILE = "VERSION"
CREDITCARD_UUID_CACHE_TIME = 24 * 60 * 60  # one day



MAILCHIMP = {
    "API_KEY": "",
    "SERVER": "",
    "LIST_ID": "",
}

HUBSPOT_API_KEY = None

# ADMIN mailbox
ADMIN_GENERAL_EMAIL = "general@gmail.com"


# SLACK WEBHOOKS
SLACK_WEBHOOK_CUSTOMER_SUCCESS = None
SLACK_WEBHOOK_REVIEW_SUCCESS = None


